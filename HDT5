# -*- coding: cp1252 -*-
#Autores: Diego Valdez, 15397 ; Sang Woo Shin, 15372
#
#------------------------------------------

import simpy
from random import uniform, Random

class CPU:
    def __init__(self, env):
        self.name=id
        self.vel = 2;
        self.ram = simpy.Container(env, init=100, capacity=100)
        #self.mon_proc = env.process(self.monitor_tank(env))
         
    """def monitor_tank(self, env):
        while True:
            if self.gas_tank.level < 100:
                print('Calling tanker at %s' % env.now)
                env.process(tanker(env, self))
            yield env.timeout(15)"""

"""def tanker(env, gas_station):
    yield env.timeout(10)  # Need 10 Minutes to arrive
    print('Tanker arriving at %s' % env.now)
    amount = gas_station.gas_tank.capacity - gas_station.gas_tank.level
    yield gas_station.gas_tank.put(amount)


def car(name, env, gas_station):
    print('Car %s arriving at %s' % (name, env.now))
    with gas_station.fuel_dispensers.request() as req:
        yield req
        print('Car %s starts refueling at %s' % (name, env.now))
        yield gas_station.gas_tank.get(40)
        yield env.timeout(5)
        print('Car %s done refueling at %s' % (name, env.now))"""

def proc_generator(env, cpu, np):
    for i in range(np):
        mem=azar.randint(1,10)
        name= "Proceso "+ str(i+1)
        print "%5.1f %s started (Memoria: %d)" %(env.now,name,mem)
        yield env.timeout(0)

nPro=25
azar = Random(12345)
env = simpy.Environment()
cpu = CPU(env)
car_gen = env.process(proc_generator(env, cpu, nPro))
env.run(35)

